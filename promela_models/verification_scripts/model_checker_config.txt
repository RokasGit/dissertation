# SPIN Model Checker Configuration for OCEOS Verification
# This file contains configuration settings for running SPIN on OCEOS models

# Memory and Search Limits
MEMLIM=1024          # Memory limit in MB
DEPTH_LIMIT=10000    # Maximum search depth
HASH_SIZE=1048576    # Hash table size for state storage

# Verification Options
SAFETY_CHECK=true           # Perform safety property verification
LIVENESS_CHECK=true         # Perform liveness property verification  
FAIRNESS_CHECK=true         # Include fairness constraints
PARTIAL_ORDER_REDUCTION=true # Enable partial order reduction optimization

# Output Options
VERBOSE=true                # Verbose output during verification
GENERATE_TRAILS=true        # Generate counterexample trails
SAVE_STATISTICS=true        # Save verification statistics
COVERAGE_ANALYSIS=true      # Perform code coverage analysis

# Compilation Options  
COMPILER=gcc                # C compiler to use
OPTIMIZATION_LEVEL=O2       # Compiler optimization level
EXTRA_FLAGS=-DXUSAFE       # Additional compiler flags for safety

# Simulation Options
RANDOM_SEED=12345          # Seed for random simulations
SIMULATION_STEPS=1000      # Steps per simulation run
SIMULATION_RUNS=5          # Number of random simulation runs

# Property-Specific Settings
[Properties]
# Timeout for individual property verification (seconds)
PROPERTY_TIMEOUT=300       

# Properties to verify (can be overridden from command line)
VERIFY_SAFETY=true
VERIFY_LIVENESS=true
VERIFY_TEMPORAL=true
VERIFY_INVARIANTS=true
VERIFY_ERROR_HANDLING=true

# Advanced Options
[Advanced]
# Use bitstate hashing for large state spaces
BITSTATE_HASHING=false     

# Enable symmetry reduction
SYMMETRY_REDUCTION=false   

# Use compression for state storage
STATE_COMPRESSION=false    

# Multi-core verification (if supported)
PARALLEL_VERIFICATION=false
NUM_CORES=4               

# Debugging Options
[Debugging]
# Generate guided simulation from counterexamples
GUIDED_SIMULATION=true     

# Show transition labels in traces
SHOW_TRANSITIONS=true      

# Include variable values in traces  
SHOW_VARIABLES=true        

# Print state numbers in output
SHOW_STATES=true          

# Output Formatting
[Output]
# Format for verification results
RESULT_FORMAT=detailed     # Options: brief, detailed, json

# Save results to specific files
SAVE_TO_FILE=true         
RESULTS_FILE=verification_results.txt
TRACE_FILE=verification_trace.trail
STATS_FILE=verification_stats.txt

# Email notification on completion (if configured)
EMAIL_NOTIFY=false        
EMAIL_ADDRESS=user@example.com

# Integration Options
[Integration]
# Generate test cases from verified models
GENERATE_TESTS=true       
TEST_OUTPUT_DIR=../generated_tests
TEST_FORMAT=c             # Options: c, cpp, java

# Generate documentation from verification results
GENERATE_DOCS=true        
DOC_OUTPUT_DIR=../docs
DOC_FORMAT=markdown       # Options: markdown, html, pdf

# Version Control Integration
VCS_INTEGRATION=false     
VCS_COMMIT_RESULTS=false  

# Model Transformation
[Transformation]
# Abstract model for faster verification
USE_ABSTRACTION=false     

# Slice model to relevant properties only
MODEL_SLICING=false       

# Reduce model complexity automatically
AUTO_REDUCTION=false      

# Custom verification targets
[Custom]
# Additional models to verify in sequence
ADDITIONAL_MODELS=        

# Custom property files
CUSTOM_PROPERTIES=        

# Post-processing scripts
POST_PROCESS_SCRIPT=      

# Pre-verification setup script
PRE_VERIFY_SCRIPT=        

# Reporting Options
[Reporting]
# Generate HTML report
HTML_REPORT=true          
HTML_TEMPLATE=default     

# Include performance metrics
PERFORMANCE_METRICS=true  

# Compare with previous runs
REGRESSION_TESTING=false  
BASELINE_RESULTS=         

# Archive results with timestamp
ARCHIVE_RESULTS=true      
ARCHIVE_DIR=../archives   

# End of Configuration
